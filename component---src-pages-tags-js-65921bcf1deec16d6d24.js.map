{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPage","data","location","siteTitle","site","siteMetadata","title","group","allMarkdownRemark","map","tag","key","fieldValue","to","kebabCase","totalCount","pageQuery"],"mappings":"2FAAA,mIAiDeA,UAxCE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBD,MAErC,OACE,kBAAC,IAAD,CAAQL,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SACX,oCACA,4BACGC,EAAME,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAIE,YACX,kBAAC,OAAD,CAAMC,GAAE,SAAWC,IAAUJ,EAAIE,YAAzB,KACLF,EAAIE,WADP,KACqBF,EAAIK,WAAY,IACf,IAAnBL,EAAIK,WAAmB,OAAS,QAFnC,YA+BL,IAAMC,EAAS","file":"component---src-pages-tags-js-65921bcf1deec16d6d24.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n// Utilities\nimport kebabCase from \"lodash/kebabCase\"\n// Components\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst TagsPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const group = data.allMarkdownRemark.group\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Tags\" />\n      <h1>Tags</h1>\n      <ul>\n        {group.map((tag) => (\n          <li key={tag.fieldValue}>\n            <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n              {tag.fieldValue} ({tag.totalCount}{\" \"}\n              {tag.totalCount === 1 ? \"post\" : \"posts\"})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}